name: gitops-cp-bas
type: gitops
description: >-
  Module to populate a gitops repo with the resources to provision the Behavior
  Analysis Service from the IBM Cloud Pak
tags:
  - cloud pak
  - behavior analysis service
  - bas
versions:
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        discriminator: ibm-bas
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: sc-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-util-storage-class-manager.git
            version: '>= 1.0.0'
        optional: true
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ''
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: dbuser
        type: string
        description: The (mongodb) database user
        default: dbuser
      - name: dbpassword
        type: string
        description: The (mongodb) database password
        sensitive: true
      - name: grafanauser
        type: string
        description: The grafana user
        default: gfuser
      - name: grafanapassword
        type: string
        description: The grafana password
        sensitive: true
      - name: default_storage_class
        type: string
        description: The default storage class for the resources
        moduleRef:
          id: sc-manager
          output: block_storage_class
      - name: db_archive_storage_class
        type: string
        description: Storage class for the db_archive resource
        moduleRef:
          id: sc-manager
          output: rwx_storage_class
      - name: postgres_storage_class
        type: string
        description: Storage class for the postgres resource
        moduleRef:
          id: sc-manager
          output: block_storage_class
      - name: kafka_storage_class
        type: string
        description: Storage class for the kafka resource
        moduleRef:
          id: sc-manager
          output: block_storage_class
      - name: zookeeper_storage_class
        type: string
        description: Storage class for the zookeeper resource
        moduleRef:
          id: sc-manager
          output: block_storage_class
    version: v1.0.4
    outputs:
      - name: name
        description: The name of the module
      - name: branch
        description: The branch where the module config has been placed
      - name: namespace
        description: The namespace where the module will be deployed
      - name: server_name
        description: The server where the module will be deployed
      - name: layer
        description: The layer where the module is deployed
      - name: type
        description: The type of module where the module is deployed
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        discriminator: ibm-bas
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
      - id: sc-manager
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-util-storage-class-manager.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ''
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: dbuser
        type: string
        description: The (mongodb) database user
        default: dbuser
      - name: dbpassword
        type: string
        description: The (mongodb) database password
        sensitive: true
      - name: grafanauser
        type: string
        description: The grafana user
        default: gfuser
      - name: grafanapassword
        type: string
        description: The grafana password
        sensitive: true
      - name: default_storage_class
        type: string
        description: The default storage class for the resources
        moduleRef:
          id: sc-manager
          output: block_storage_class
      - name: db_archive_storage_class
        type: string
        description: Storage class for the db_archive resource
        moduleRef:
          id: sc-manager
          output: rwx_storage_class
      - name: postgres_storage_class
        type: string
        description: Storage class for the postgres resource
        moduleRef:
          id: sc-manager
          output: block_storage_class
      - name: kafka_storage_class
        type: string
        description: Storage class for the kafka resource
        moduleRef:
          id: sc-manager
          output: block_storage_class
      - name: zookeeper_storage_class
        type: string
        description: Storage class for the zookeeper resource
        moduleRef:
          id: sc-manager
          output: block_storage_class
    version: v1.0.3
    outputs:
      - name: name
        description: The name of the module
      - name: branch
        description: The branch where the module config has been placed
      - name: namespace
        description: The namespace where the module will be deployed
      - name: server_name
        description: The server where the module will be deployed
      - name: layer
        description: The layer where the module is deployed
      - name: type
        description: The type of module where the module is deployed
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ''
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: dbuser
        type: string
        description: The (mongodb) database user
        default: dbuser
      - name: dbpassword
        type: string
        description: The (mongodb) database password
        sensitive: true
      - name: grafanauser
        type: string
        description: The grafana user
        default: gfuser
      - name: grafanapassword
        type: string
        description: The grafana password
        sensitive: true
      - name: default_storage_class
        type: string
        description: The default storage class for the resources
      - name: db_archive_storage_class
        type: string
        description: Storage class for the db_archive resource
      - name: postgres_storage_class
        type: string
        description: Storage class for the postgres resource
      - name: kafka_storage_class
        type: string
        description: Storage class for the kafka resource
      - name: zookeeper_storage_class
        type: string
        description: Storage class for the zookeeper resource
    version: v1.0.1
    outputs:
      - name: name
        description: The name of the module
      - name: branch
        description: The branch where the module config has been placed
      - name: namespace
        description: The namespace where the module will be deployed
      - name: server_name
        description: The server where the module will be deployed
      - name: layer
        description: The layer where the module is deployed
      - name: type
        description: The type of module where the module is deployed
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ''
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: dbuser
        type: string
        description: The (mongodb) database user
        default: dbuser
      - name: dbpassword
        type: string
        description: The (mongodb) database password
        sensitive: true
      - name: grafanauser
        type: string
        description: The grafana user
        default: gfuser
      - name: grafanapassword
        type: string
        description: The grafana password
        sensitive: true
      - name: default_storage_class
        type: string
        description: The default storage class for the resources
      - name: db_archive_storage_class
        type: string
        description: Storage class for the db_archive resource
        default: ''
      - name: postgres_storage_class
        type: string
        description: Storage class for the postgres resource
        default: ''
      - name: kafka_storage_class
        type: string
        description: Storage class for the kafka resource
        default: ''
      - name: zookeeper_storage_class
        type: string
        description: Storage class for the zookeeper resource
        default: ''
    version: v1.0.0
    outputs:
      - name: name
        description: The name of the module
      - name: branch
        description: The branch where the module config has been placed
      - name: namespace
        description: The namespace where the module will be deployed
      - name: server_name
        description: The server where the module will be deployed
      - name: layer
        description: The layer where the module is deployed
      - name: type
        description: The type of module where the module is deployed
softwareProvider: ibm-cp
id: github.com/cloud-native-toolkit/terraform-gitops-cp-bas
alias: bas
